/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        TreeNode *newNode = new TreeNode(val);
        TreeNode *temp = root;
        TreeNode *temp2;
        while(temp!=NULL)
        {
            temp2 = root;
            if(temp->val > val)
            {
                // GO RIGHT
                temp = temp->right;
                // temp2 = temp->right;
            }
            else
            {
                // GO LEFT
                temp = temp->left;
                // temp2 =  temp->left;
            }
        }
        
        if(temp == NULL)
        {
            temp = newNode;
        }
        if(temp->val > val) temp->right = newNode;
        if(temp->val < val) temp->left = newNode;
        
        return temp;
        
        
    }
};